{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","inputRef","useRef","useEffect","current","focus","onChange","e","target","value","type","className","placeholder","ref","onClick","preventDefault","text","completed","id","uuidv4","alert","name","Todo","todo","indexOf","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","getLocalTodos","filterHandlerFunc","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","msgStyles","color","justifyContent","display","length","style","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19e9294c.chunk.js","sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\n\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction Form({ inputText, setInputText, todos, setTodos, setStatus }) {\r\n  const inputTextHandler = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    setTodos([...todos, { text: inputText, completed: false, id: uuidv4() }]);\r\n    setInputText(\"\");\r\n\r\n    if (inputText === \"\") {\r\n      alert(\"You should enter a text\");\r\n      return setTodos(todos);\r\n    } else {\r\n      return inputText;\r\n    }\r\n  };\r\n\r\n  const statusHandler = (e) => {\r\n    setStatus(e.target.value);\r\n  };\r\n\r\n  const inputRef = useRef();\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  return (\r\n    <form>\r\n      <input\r\n        onChange={inputTextHandler}\r\n        value={inputText}\r\n        type=\"text\"\r\n        className=\"todo-input\"\r\n        placeholder=\"Enter your todo\"\r\n        ref={inputRef}\r\n      />\r\n      <button onClick={submitHandler} className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n\r\n      <div className=\"select\">\r\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nfunction Todo({ text, todo, todos, setTodos }) {\r\n  const deleteHandler = () => {\r\n    setTodos(todos.filter((el) => el.id !== todo.id));\r\n  };\r\n  const completeHandler = () => {\r\n    setTodos(\r\n      todos.map((item) => {\r\n        if (item.id === todo.id) {\r\n          return {\r\n            ...item,\r\n            completed: !todo.completed,\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <p className={`${todo.completed ? \"todo-item completed\" : \"todo-item\"}`}>{`${todos.indexOf(todo)+1}.  ${text}`}</p>\r\n      <button onClick={completeHandler} className=\"complete-btn\">\r\n        <i className=\"fas fa-check\"></i>\r\n      </button>\r\n      <button onClick={deleteHandler} className=\"trash-btn\">\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nfunction TodoList({ todos, setTodos, filteredTodos }) {\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n        {filteredTodos.map((todo) => (\r\n          <Todo\r\n            text={todo.text}\r\n            key={todo.id}\r\n            setTodos={setTodos}\r\n            todos={todos}\r\n            todo={todo}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  // текста от input полето\n\n  const [todos, setTodos] = useState([]);\n  // създаваме масив от обекти, съдържащи информация за всички нови добавени li item-и\n\n  const [status, setStatus] = useState(\"all\");\n  // state който ще съхранява информация относно опциите в select менюто. Например : completed, uncompleted, all\n\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  // създаваме масив от обекти, всеки един от които ще съхранява информация спрямо избраната в select менюто стойност\n\n  const filterHandlerFunc = () => {\n    switch (status) {\n      case \"completed\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    filterHandlerFunc();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  };\n\n  const msgStyles = {\n    color: \"red\",\n    inputText: \"No Todos To Show\",\n    justifyContent: \"center\",\n    display: \"flex\"\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Todo list </h1>\n      </header>\n      <Form\n        inputText={inputText}\n        setInputText={setInputText}\n        todos={todos}\n        setTodos={setTodos}\n        setStatus={setStatus}\n      />\n      {todos.length ? (\n        <TodoList\n          todos={todos}\n          setTodos={setTodos}\n          filteredTodos={filteredTodos}\n        />\n      ) : (\n        <h1 style={msgStyles}>{msgStyles.inputText}</h1>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}